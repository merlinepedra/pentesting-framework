#!/bin/bash

OS=$(uname -o | grep -o "Android")
ARG=$3

export POSTDIR=$(pwd | sed "s/\/pentesting-framework//g")
DIR="${POSTDIR}/psf-extramodule"

if [[ ! $__return__ == 105 ]];then
cd ${DIR}/server &> /dev/null
else
cd server &> /dev/null
fi

if [[ -f ngrok ]] && [[ -f cloudflared ]]
then
:
else
exit 0
fi


CLR() {
printf "                                                               \r"
}

net_check() {
connection="$(curl -Is http://www.google.com &> /dev/null; echo $?)"
if [[ "$connection" != 0 ]]
then
printf "\e[94m(\e[0m>\e[94m)\e[0m Tunnel error, debug: connection\n"
exit
fi
}
stop() {
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
checkcloudflared=$(ps aux | grep -o "cloudflared" | head -n1)
checkngrok=$(ps aux | grep -o "ngrok" | head -n1)
checkphp=$(ps aux | grep -o "php" | head -n1)
checkssh=$(ps aux | grep -o "ssh" | head -n1)
if [[ $checkcloudflared == *'cloudflared'* ]]; then
killall -2 cloudflared > /dev/null 2>&1
fi
if [[ $checkngrok == *'ngrok'* ]]; then
pkill -f -2 ngrok > /dev/null 2>&1
killall -2 ngrok > /dev/null 2>&1
fi
if [[ $checkphp == *'php'* ]]; then
killall -2 php > /dev/null 2>&1
fi
if [[ $checkssh == *'ssh'* ]]; then
killall -2 ssh > /dev/null 2>&1
fi

  if [[ `pidof php` ]]; then
		killall php > /dev/null 2>&1
	fi
	if [[ `pidof ngrok` ]]; then
		killall ngrok > /dev/null 2>&1
	fi
	if [[ `pidof cloudflared` ]]; then
		killall cloudflared > /dev/null 2>&1
	fi
}

stop &> /dev/null

ngrok-server()
{
if [[ $OS == *'Android'* ]];then
./ngrok http 8080 > /dev/null 2>&1 &
else
sudo ./ngrok http 8080 > /dev/null 2>&1 &
fi

http_ngrok() {
link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o "https://[-0-9a-z]*\.ngrok.io")
}
sleep 0
CLR

net_check
http_ngrok

if [[ -z $link ]];then
printf "$link" &> /dev/null
progress-bar "__wait__ 10" "0.0350" "prog:1" "Starting Server at http Port : (8080)..." -r
printf "${b0SIGN} Started Server at http Port : (8080)..."
http_ngrok
printf "$link" &> /dev/null
fi
if [[ -z $link ]];then
CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m Ngrok error, debug: ./ngrok http (8080)...\e[0m\n"
stop &> /dev/null
exit 1
fi
}

cloudflare-server()
{

if [[ -f ".cflare.log" ]]
then
	rm .cflare.log &> /dev/null
fi

#php -S localhost:8080 > /dev/null 2>&1 &

if [[ $OS == *'Android'* ]];then
proot -0 ./cloudflared tunnel -url 127.0.0.1:8080 --logfile .cflare.log > /dev/null 2>&1 &
else
./cloudflared tunnel -url 127.0.0.1:8080 --logfile .cflare.log > /dev/null 2>&1 &
fi

http_cloudflared() {
  link=$(grep -o 'https://[-0-9a-z]*\.trycloudflare.com' ".cflare.log")
}
sleep 0
CLR

net_check
sleep 1
http_cloudflared &> /dev/null

if [[ -z $link ]];then
printf "$link" &> /dev/null
progress-bar "__wait__ 5" "0" "prog:4" "Starting Server at http Port : (8080)..." -r
printf "${b0SIGN} Started Server at http Port : (8080)..."
http_cloudflared &> /dev/null
printf "$link" &> /dev/null
fi
if [[ -z $link ]];then
CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m cloudflared error, debug: ./cloudflared http (8080)...\e[0m\n"
stop &> /dev/null
exit 1
fi
}

get_input()
{
printf "\n${C2}(${R0}1${C2})${R0} Localhost (Only Devs)\n"
printf "${C2}(${R0}2${C2})${R0} Ngrok (Good)\n"
printf "${C2}(${R0}3${C2})${R0} Cloudflare (Best)\n"
printf "${C2}(${R0}?${C2})${R0} Choose a Option : "
read _input

if [[ $_input == "1" ]]
then
#	php -S localhost:8080 > /dev/null 2>&1 &
	link="http://127.0.0.1:8080"
elif [[ $_input == "2" ]]
then
	ngrok-server
elif [[ $_input == "3" ]]
then
	cloudflare-server
fi

short=$(curl -s https://is.gd/create.php\?format\=simple\&url\=${link})
shorter=${short#https://}
CLR
printf "\e[94m(\e[0m>\e[94m)\e[0m Your https link : \e[4m${link}\e[0m\n"
}
